% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allGenerics.R, R/oplsMultiDataSet-methods.R
\docType{methods}
\name{getMset}
\alias{getMset}
\alias{getMset,oplsMultiDataSet-method}
\alias{getMset,}
\alias{oplsMultiDataSet-method}
\title{getMset method}
\usage{
getMset(object, ...)

\S4method{getMset}{oplsMultiDataSet}(object)
}
\arguments{
\item{object}{An S4 object of class \code{oplsMultiDataSet}, created by \code{opls}
function applied to a MultiDataSet}

\item{...}{Currently not used}
}
\value{
An S4 object of class \code{MultiDataSet}.
}
\description{
Extracts the complemented MultiDataSet when opls has been applied to a MultiDataSet
}
\examples{
# Building the MultiDataSet ('brgeData' Bioconductor package)
data("brge_gexp", package = "brgedata")
brge_gexp <- brge_gexp[1:1000, ]
data("brge_prot", package = "brgedata")
brgeMset <- MultiDataSet::createMultiDataSet()
brgeMset <- MultiDataSet::add_eset(brgeMset, brge_gexp, dataset.type = "expression",
dataset.name = "gexp", warnings = FALSE)
brgeMset <- MultiDataSet::add_eset(brgeMset, brge_prot, dataset.type = "proteomics",
dataset.name = "prot", warnings = FALSE)
# Summary of the MultiDataSet
brgeMset
# Buidling PCA models for each dataset
brgePca <- ropls::opls(brgeMset)
# Getting the updated MultiDataSet instance (with scores, loadings, VIP, etc.)
brgeMset <- ropls::getMset(brgePca)
}
